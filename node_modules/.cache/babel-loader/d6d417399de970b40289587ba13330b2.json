{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Bruno Projeccts\\\\r3f-plane\\\\src\\\\CustomObject.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useMemo } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomObject() {\n  _s();\n\n  const geometryRef = useRef();\n  const verticesCount = 10 * 3;\n  const positions = useMemo(() => {\n    const positions = new Float32Array(verticesCount * 3);\n\n    for (let i = 0; i < verticesCount * 3; i++) positions[i] = (Math.random() - 0.5) * 3;\n\n    return positions;\n  });\n  useEffect(() => {\n    geometryRef.current.computeVertexNormals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      ref: geometryRef,\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        attach: \"attributes-position\",\n        count: verticesCount,\n        itemSize: 3,\n        array: positions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"red\",\n      side: THREE.DoubleSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}\n\n_s(CustomObject, \"4+TJ94Hr/oor5ORgZkKm/mUtvAQ=\");\n\n_c = CustomObject;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomObject\");","map":{"version":3,"names":["useEffect","useRef","useMemo","THREE","CustomObject","geometryRef","verticesCount","positions","Float32Array","i","Math","random","current","computeVertexNormals","DoubleSide"],"sources":["D:/Projects/Bruno Projeccts/r3f-plane/src/CustomObject.js"],"sourcesContent":["import { useEffect, useRef, useMemo } from 'react'\nimport * as THREE from 'three'\n\nexport default function CustomObject()\n{\n    const geometryRef = useRef()\n\n    const verticesCount = 10 * 3\n\n    const positions = useMemo(() =>\n    {\n        const positions = new Float32Array(verticesCount * 3)\n        \n        for(let i = 0; i < verticesCount * 3; i++)\n            positions[i] = (Math.random() - 0.5) * 3\n\n        return positions\n    })\n\n    useEffect(() =>\n    {\n        geometryRef.current.computeVertexNormals()\n    }, [])\n\n    return <mesh>\n        <bufferGeometry ref={ geometryRef }>\n            <bufferAttribute\n                attach=\"attributes-position\"\n                count={ verticesCount }\n                itemSize={ 3 }\n                array={ positions }\n            />\n        </bufferGeometry>\n        <meshStandardMaterial color=\"red\" side={ THREE.DoubleSide } />\n    </mesh>\n}"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,eAAe,SAASC,YAAT,GACf;EAAA;;EACI,MAAMC,WAAW,GAAGJ,MAAM,EAA1B;EAEA,MAAMK,aAAa,GAAG,KAAK,CAA3B;EAEA,MAAMC,SAAS,GAAGL,OAAO,CAAC,MAC1B;IACI,MAAMK,SAAS,GAAG,IAAIC,YAAJ,CAAiBF,aAAa,GAAG,CAAjC,CAAlB;;IAEA,KAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,aAAa,GAAG,CAAnC,EAAsCG,CAAC,EAAvC,EACIF,SAAS,CAACE,CAAD,CAAT,GAAe,CAACC,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,CAAvC;;IAEJ,OAAOJ,SAAP;EACH,CARwB,CAAzB;EAUAP,SAAS,CAAC,MACV;IACIK,WAAW,CAACO,OAAZ,CAAoBC,oBAApB;EACH,CAHQ,EAGN,EAHM,CAAT;EAKA,oBAAO;IAAA,wBACH;MAAgB,GAAG,EAAGR,WAAtB;MAAA,uBACI;QACI,MAAM,EAAC,qBADX;QAEI,KAAK,EAAGC,aAFZ;QAGI,QAAQ,EAAG,CAHf;QAII,KAAK,EAAGC;MAJZ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADG,eASH;MAAsB,KAAK,EAAC,KAA5B;MAAkC,IAAI,EAAGJ,KAAK,CAACW;IAA/C;MAAA;MAAA;MAAA;IAAA,QATG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAWH;;GAhCuBV,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}